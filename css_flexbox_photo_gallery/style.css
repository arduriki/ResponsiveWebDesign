/* The box-sizing property is used to tell the browser what box model to use when calculating the width and height of elements. The CSS box model is essentially a box that wraps around every HTML element. It consists of: the content, padding, border, and margin. */

/* The content-box is the default CSS box-sizing value. If you set an element's width to 300 pixels, that 300 pixels will only include the content box, not the padding or border. So if you add any padding or border to the element, the overall width will be more than 300 pixels. */

/* The border-box value, on the other hand, changes this behavior. If you set an element's width to 300 pixels, that 300 pixels will include the content box, the padding, and the border. This makes it much easier to predict the actual rendered size of an element, even if padding and borders are used. */

body {
    margin: 0;
    font-family: sans-serif;
    background-color: #f5f6f7;
}

.header {
    text-align: center;
    text-transform: uppercase;
    padding: 32px;
    background-color: #0a0a23;
    color: #fff;
    border-bottom: 4px solid #fdb347;
}

.gallery {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    justify-content: center;
    align-items: center;
    padding: 20px 10px;
    max-width: 1400px;
    margin: 0 auto;
    gap: 16px;
}

.gallery img {
    width: 100%;
    max-width: 350px;
    height: 300px;
    object-fit: cover;
    border-radius: 10px;
}

/*
The ::after pseudo-element creates an element that is the last child of the selected element. You can use it to add an empty element after the last image. If you give it the same width as the images it will push the last image to the left when the gallery is in a two-column layout.

.container::after {
    content: "";
    width: 860px;
}
*/

.gallery::after {
    content: "";
    width: 350px;
}